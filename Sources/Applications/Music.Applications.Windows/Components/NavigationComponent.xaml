<UserControl x:Class="Music.Applications.Windows.Components.NavigationComponent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:Music.Applications.Windows.ViewModels"
             xmlns:controls="clr-namespace:Music.Applications.Windows.Controls"
             d:DataContext="{d:DesignInstance viewModels:DefaultViewModel}"
             mc:Ignorable="d" d:DesignWidth="155.5px">
    <StackPanel>
        <controls:SelectableImageButton x:Name="HomeButton"
                                        Clicked="HomeButton_OnClicked"
                                        LabelText="{DynamicResource HomeLabel}"
                                        Image="{DynamicResource HomeIcon}">
            <controls:SelectableImageButton.Style>
                <Style TargetType="{x:Type controls:SelectableImageButton}"
                       BasedOn="{StaticResource {x:Type controls:SelectableImageButton}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Navigation.CurrentView.ModelName, FallbackValue=Home}"
                                     Value="Home">
                            <Setter Property="IsSelected" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:SelectableImageButton.Style>
        </controls:SelectableImageButton>

        <Separator Height="1px" />

        <controls:SelectableImageButton x:Name="BrowseButton"
                                        Clicked="BrowseButton_OnClicked"
                                        LabelText="{DynamicResource BrowseLabel}"
                                        Image="{DynamicResource BrowseIcon}">
            <controls:SelectableImageButton.Style>
                <Style TargetType="{x:Type controls:SelectableImageButton}"
                       BasedOn="{StaticResource {x:Type controls:SelectableImageButton}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Navigation.CurrentView.ModelName, FallbackValue=Home}"
                                     Value="Browse">
                            <Setter Property="IsSelected" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:SelectableImageButton.Style>
        </controls:SelectableImageButton>

        <Separator Height="1px">
            <Separator.Style>
                <Style TargetType="Separator" BasedOn="{StaticResource {x:Type Separator}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding User.IsArtist}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Separator.Style>
        </Separator>

        <controls:SelectableImageButton x:Name="ArtistStudioButton"
                                        Clicked="ArtistStudioButton_OnClicked"
                                        LabelText="{DynamicResource ArtistStudio}"
                                        Image="{DynamicResource ArtistStudioIcon}">
            <controls:SelectableImageButton.Style>
                <Style TargetType="{x:Type controls:SelectableImageButton}"
                       BasedOn="{StaticResource {x:Type controls:SelectableImageButton}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding User.IsArtist}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Navigation.CurrentView.ModelName, FallbackValue=Home}"
                                     Value="Artist Studio">
                            <Setter Property="IsSelected" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:SelectableImageButton.Style>
        </controls:SelectableImageButton>

        <Separator Height="1px">
            <Separator.Style>
                <Style TargetType="Separator" BasedOn="{StaticResource {x:Type Separator}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding User.IsAdmin}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Separator.Style>
        </Separator>

        <controls:SelectableImageButton x:Name="AdminPanelButton"
                                        Clicked="AdminPanelButton_OnClicked"
                                        LabelText="{DynamicResource AdminPanel}"
                                        Image="{DynamicResource AdminPanelIcon}">
            <controls:SelectableImageButton.Style>
                <Style TargetType="{x:Type controls:SelectableImageButton}"
                       BasedOn="{StaticResource {x:Type controls:SelectableImageButton}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding User.IsAdmin}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Navigation.CurrentView.ModelName, FallbackValue=Home}"
                                     Value="Admin Panel">
                            <Setter Property="IsSelected" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:SelectableImageButton.Style>
        </controls:SelectableImageButton>

        <Separator Height="3px" />

        <!--LibraryLabel-->

        <Grid x:Name="LibraryArea" Background="Transparent" Margin="0">

            <TextBlock Text="{DynamicResource LibraryLabel}"
                       Margin="5,0,0,0" Foreground="{DynamicResource TextColor}"
                       VerticalAlignment="Center" HorizontalAlignment="Left" />

            <controls:ImageButton
                ImageHeight="10" ImageWidth="10" x:Name="CreatePlaylistButton"
                Width="18px" Height="18px" Clicked="CreatePlaylistButton_OnClicked"
                HorizontalAlignment="Right" VerticalAlignment="Center"
                Image="{DynamicResource AddIcon}">
                <controls:ImageButton.Style>
                    <Style TargetType="{x:Type controls:ImageButton}"
                           BasedOn="{StaticResource {x:Type controls:ImageButton}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=LibraryArea, Path=IsMouseOver}" Value="False">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </controls:ImageButton.Style>
            </controls:ImageButton>
        </Grid>

        <Separator Height="1px" />

        <controls:SelectableImageButton x:Name="LikedButton"
                                        Clicked="LikedButton_OnClicked"
                                        LabelText="{DynamicResource LikedLabel}"
                                        Image="{DynamicResource FilledLikeIcon}">
            <controls:SelectableImageButton.Style>
                <Style TargetType="{x:Type controls:SelectableImageButton}"
                       BasedOn="{StaticResource {x:Type controls:SelectableImageButton}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Navigation.CurrentView.ModelName, FallbackValue=Home}"
                                     Value="Liked">
                            <Setter Property="IsSelected" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:SelectableImageButton.Style>
        </controls:SelectableImageButton>

        <Separator Height="1px" />

        <controls:SelectableImageButton x:Name="AlbumsButton"
                                        Clicked="AlbumsButton_OnClicked"
                                        LabelText="{DynamicResource AlbumsLabel}"
                                        Image="{DynamicResource AlbumsIcon}">
            <controls:SelectableImageButton.Style>
                <Style TargetType="{x:Type controls:SelectableImageButton}"
                       BasedOn="{StaticResource {x:Type controls:SelectableImageButton}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Navigation.CurrentView.ModelName, FallbackValue=Home}"
                                     Value="Albums">
                            <Setter Property="IsSelected" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:SelectableImageButton.Style>
        </controls:SelectableImageButton>

        <Separator Height="1px" />

        <controls:SelectableImageButton x:Name="ArtistsButton"
                                        Clicked="ArtistsButton_OnClicked"
                                        LabelText="{DynamicResource ArtistsLabel}"
                                        Image="{DynamicResource ArtistsIcon}">
            <controls:SelectableImageButton.Style>
                <Style TargetType="{x:Type controls:SelectableImageButton}"
                       BasedOn="{StaticResource {x:Type controls:SelectableImageButton}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Navigation.CurrentView.ModelName, FallbackValue=Home}"
                                     Value="Artists">
                            <Setter Property="IsSelected" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:SelectableImageButton.Style>
        </controls:SelectableImageButton>

        <Separator Height="1px" />

        <controls:SelectableImageButton x:Name="TracksButton"
                                        Clicked="TracksButton_OnClicked"
                                        LabelText="{DynamicResource TracksLabel}"
                                        Image="{DynamicResource TracksIcon}">
            <controls:SelectableImageButton.Style>
                <Style TargetType="{x:Type controls:SelectableImageButton}"
                       BasedOn="{StaticResource {x:Type controls:SelectableImageButton}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Navigation.CurrentView.ModelName, FallbackValue=Home}"
                                     Value="Tracks">
                            <Setter Property="IsSelected" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:SelectableImageButton.Style>
        </controls:SelectableImageButton>

        <!--Separator-->
        <Border Height="1px" Opacity="10"
                Background="{DynamicResource TextColor}"
                Margin="0, 5, 0, 5">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=UserPlaylists, Path=Items.Count}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <!--UserPlaylists-->
        <ListView Background="Transparent"
                  x:Name="UserPlaylists"
                  VerticalAlignment="Top"
                  BorderThickness="0" Margin="0,2px,0,0"
                  HorizontalContentAlignment="Stretch"
                  ItemsSource="{Binding UserPlaylists}">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Grid x:Name="PlaylistsGrid" MouseLeftButtonDown="PlaylistsGrid_OnMouseLeftButtonDown">
                                    <Border CornerRadius="3"
                                            Padding="5,0,0,0"
                                            Margin="0,0,0,2px"
                                            x:Name="PlaylistBorder"
                                            Height="20px"
                                            MouseLeftButtonDown="PlaylistBorder_OnMouseLeftButtonDown">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background"
                                                                Value="{DynamicResource HoverDarkColor}" />
                                                    </Trigger>
                                                    <DataTrigger
                                                        Binding="{Binding ElementName=TrashArea, Path=IsMouseOver}"
                                                        Value="True">
                                                        <Setter Property="Background"
                                                                Value="{DynamicResource HoverDarkColor}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <TextBlock Text="{Binding Title, Mode=OneWay, NotifyOnSourceUpdated=True}"
                                                   Foreground="{DynamicResource AccentTextColor}"
                                                   HorizontalAlignment="Left"
                                                   Margin="0" Padding="0" VerticalAlignment="Center" />
                                    </Border>
                                    <Viewbox Width="10" Height="12" HorizontalAlignment="Right"
                                             Margin="0,0,3px,0" Name="TrashArea" Cursor="Hand"
                                             MouseLeftButtonDown="TrashArea_OnMouseLeftButtonDown">
                                        <Viewbox.Style>
                                            <Style TargetType="Viewbox">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </Trigger>
                                                    <DataTrigger
                                                        Binding="{Binding ElementName=PlaylistBorder, Path=IsMouseOver}"
                                                        Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Viewbox.Style>
                                        <Path Data="{StaticResource TrashIcon}">
                                            <Path.Style>
                                                <Style TargetType="Path">
                                                    <Setter Property="Fill" Value="{DynamicResource AccentTextColor}" />
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                            Binding="{Binding ElementName=TrashArea, Path=IsMouseOver}"
                                                            Value="True">
                                                            <Setter Property="Fill"
                                                                    Value="{DynamicResource AlertColor}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                    </Viewbox>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" TargetName="PlaylistBorder"
                                                Value="{DynamicResource SelectionColor}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.Template>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <ItemsPresenter />
                </ControlTemplate>
            </ListView.Template>
        </ListView>
    </StackPanel>
</UserControl>