<UserControl x:Class="Music.Applications.Windows.Views.Media.Genres.EditGenreView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:genre="clr-namespace:Music.Applications.Windows.ViewModels.Media.Genre"
             xmlns:controls="clr-namespace:Music.Applications.Windows.Controls"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance genre:EditGenreViewModel}"
             d:DesignWidth="300">
    <StackPanel>

        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{DynamicResource PreviewLabel}"
                       Style="{StaticResource AdditionalHeaderText}"
                       VerticalAlignment="Center" />
            <Separator Width="10px" />

            <Border x:Name="GenrePreview" Background="{Binding Color}" Padding="5px, 3px" Focusable="False"
                    CornerRadius="5" Margin="0,0,3px,2px" HorizontalAlignment="Left">
                <TextBlock Foreground="Black">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="Text" Value="{Binding Value}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Value.Length}" Value="0">
                                    <Setter Property="Text" Value="{DynamicResource ExampleLabel}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Border>
        </StackPanel>

        <TextBlock Text="{DynamicResource ValueLabel}" Style="{StaticResource AdditionalHeaderText}" />
        <TextBox Tag="Value" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Name="ValueTextBox" Background="{DynamicResource BackgroundColor}"
                 PreviewKeyDown="ValueTextBox_OnPreviewKeyDown" />

        <Separator Height="4px" />

        <TextBlock Text="{DynamicResource ColorLabel}" Style="{StaticResource AdditionalHeaderText}" />
        <xctk:ColorPicker ColorMode="ColorCanvas" Background="{DynamicResource BlockColor}" BorderBrush="Transparent"
                          BorderThickness="0"
                          DropDownBorderBrush="Transparent" HeaderBackground="Transparent"
                          DropDownBackground="{DynamicResource BlockColor}"
                          IsOpen="False" Foreground="{DynamicResource AccentTextColor}" ShowDropDownButton="False"
                          DisplayColorAndName="True" ShowStandardColors="False" ShowRecentColors="False"
                          ShowTabHeaders="False"
                          ShowAvailableColors="False" UsingAlphaChannel="False" DisplayColorTooltip="False"
                          Focusable="False"
                          SelectedColor="{Binding Color, FallbackValue=EAE0C8}" />

        <Separator Height="3px" />

        <TextBlock Foreground="{DynamicResource AlertColor}" Opacity="0.7" Text="{Binding ErrorMessage}">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ErrorMessage.Length, FallbackValue=0}" Value="0">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <Separator Height="2" />

        <controls:CustomButton x:Name="CreateButton"
                               Clicked="CreateButton_OnClicked">
            <controls:CustomButton.Style>
                <Style TargetType="{x:Type controls:CustomButton}"
                       BasedOn="{StaticResource {x:Type controls:CustomButton}}">
                    <Setter Property="LabelText" Value="{DynamicResource UpdateLabel}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsCreating}" Value="True">
                            <Setter Property="LabelText" Value="{DynamicResource CreateLabel}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:CustomButton.Style>
        </controls:CustomButton>
    </StackPanel>
</UserControl>