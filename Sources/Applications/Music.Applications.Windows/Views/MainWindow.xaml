<Window x:Class="Music.Applications.Windows.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:Music.Applications.Windows.ViewModels"
        xmlns:controls="clr-namespace:Music.Applications.Windows.Controls"
        xmlns:components="clr-namespace:Music.Applications.Windows.Components"
        Icon="pack://application:,,,/Music.Applications.Windows;component/src/icon.ico"
        mc:Ignorable="d" Title="Music" Background="{DynamicResource BackgroundColor}" Focusable="True"
        Height="600" Width="800" MinWidth="600" MinHeight="400" d:DesignWidth="400" d:DesignHeight="600"
        d:DataContext="{d:DesignInstance viewModels:MainViewModel}" WindowStartupLocation="CenterScreen"
        Deactivated="MainWindow_OnDeactivated" MouseLeftButtonDown="MainWindow_OnMouseLeftButtonDown"
        LocationChanged="MainWindow_OnLocationChanged" SizeChanged="MainWindow_OnSizeChanged"
        KeyDown="MainWindow_OnKeyDown">

    <Grid>
        <controls:CustomPopup x:Name="GlobalPopup" Background="{DynamicResource BlockColor}" Padding="5"
                              Target="{Binding PopupViewModel.Target}"
                              Width="{Binding PopupViewModel.Width}"
                              IsOpen="{Binding PopupViewModel.IsOpen}"
                              Content="{Binding PopupViewModel.Content}"
                              IsShownOnHover="{Binding PopupViewModel.IsShownOnHover}"
                              HorizontalOffset="{Binding PopupViewModel.HorizontalOffset}"
                              Placement="Bottom" BorderThickness="1" />

        <controls:Dialog x:Name="GlobalModal" Panel.ZIndex="10"
                         Title="{Binding DialogViewModel.Title, FallbackValue=Empty Title}"
                         DialogWidth="250"
                         IsOpen="{Binding DialogViewModel.IsOpen}"
                         CloseRequested="GlobalModal_OnCloseRequested"
                         Content="{Binding DialogViewModel.Content}"
                         FormColor="{DynamicResource AlertColor}" />

        <ContentControl Focusable="False" Content="{Binding Navigation.CurrentView, FallbackValue=Content}" />
    </Grid>
</Window>